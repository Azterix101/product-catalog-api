
Product Catalog API
Description
The Product Catalog API is a robust and scalable solution for managing product catalogs in a marketplace application. Built with Node.js, Express, and MongoDB, this API allows users to create, update, delete, and retrieve products and categories. It also ensures efficient catalog management by leveraging AWS S3 for storing catalog JSON files and AWS SQS for handling catalog change notifications.

This API is designed to handle multiple requests per second, making it suitable for high-traffic applications. The catalog data can be accessed without fetching information from the database, ensuring quick response times for search operations.

Key Features
CRUD Operations for Products and Categories: Easily manage products and categories with dedicated endpoints.
Catalog Association: Associate products with categories to maintain an organized catalog structure.
Real-Time Catalog Updates: Publish catalog changes to an AWS SQS topic and update the catalog JSON in an S3 bucket.
Scalable and High-Performance: Designed to handle concurrent requests efficiently.
Easy Integration: Straightforward API endpoints that can be easily integrated into any application.
Technologies Used
Node.js: JavaScript runtime for building scalable network applications.
Express.js: Web framework for Node.js to create robust APIs.
MongoDB: NoSQL database for storing product and category data.
AWS S3: Object storage service to store catalog JSON files.
AWS SQS: Simple Queue Service to handle catalog change notifications.
Mongoose: ODM for MongoDB to model the application data.
Installation
Prerequisites
Node.js and npm installed.
MongoDB instance (local or cloud-based).
AWS account with S3 bucket and SQS queue set up.
Steps
Clone the repository:

bash
Copy code
git clone https://github.com/yourusername/product-catalog-api.git
cd product-catalog-api
Install dependencies:

bash
Copy code
npm install
Create a .env file with the following content:

env
Copy code
PORT=3000
MONGO_URI=your_mongo_connection_string
SQS_QUEUE_URL=your_sqs_queue_url
S3_BUCKET_NAME=your_s3_bucket_name
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1
Start the application:

bash
Copy code
npm start
API Endpoints
Product Routes
POST /products: Create a new product.
PUT /products/:id: Update a product.
DELETE /products/:id: Delete a product.
GET /products/:id: Get a product by ID.
Category Routes
POST /categories: Create a new category.
PUT /categories/:id: Update a category.
DELETE /categories/:id: Delete a category.
GET /categories/:id: Get a category by ID.
Catalog Route
GET /catalog/:ownerId: Get the catalog JSON for an owner.
AWS Configuration
Ensure you have an S3 bucket and SQS queue set up in AWS.
Update the .env file with your AWS credentials and resource details.
Running the SQS Consumer
The consumer for processing SQS messages is automatically started when the server is running.

